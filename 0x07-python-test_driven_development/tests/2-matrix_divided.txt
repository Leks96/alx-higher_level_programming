"""
2-matrix_divided module
======================

import module
>>> div_matrix = __import__('2-matrix_divided').matrix_divided

function:
	function that divides every element of a matrix

operations:
	* matrix must be a list of lists of integers or floats,
	otherwise raise a TypeError exception with the message
	'matrix must be a matrix (list of lists) of integers/floats'.

	* Each row of the matrix must be of the same size, 
	otherwise raise a TypeError exception with the message
	'Each row of the matrix must have the same size'.

	* div must be a number (integer or float), 
	otherwise raise a TypeError exception with the message
	'div must be a number'.

	* div canâ€™t be equal to 0, otherwise raise a ZeroDivisionError
	exception with the message 'division by zero'.

	* All elements of the matrix should be divided by div, 
	rounded to 2 decimal places.

section1:
	test with no params
	>>> div_matrix()
	Traceback (most recent call last):
	TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
	
section2:
	test with int elements and divider
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> div_matrix(matrix, 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

	test with float elements and divider
	matrix = [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]
	>>> div_matrix(matrix, 3.0)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

section3:
	test with matrix of type string
	>>> matrix = ['monty', 'python']
	>>> div_matrix(matrix, 2)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	test with row of inconsistent size
	>>> matrix = [[1, 2, 3], 4, 5, 6]
	>>> div_matrix(matrix, 2)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats
